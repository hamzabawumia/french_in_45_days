
{% extends "index.njk" %}

{% block content %}

   <div class="container mt-4">

        <h2 id="page-heading" >Learn French in 45 days</h2>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>English</th>
                    <th>French</th>
                </tr>
            </thead>
            <tbody id="table-body">
                <!-- Rows will be added here by JavaScript -->
            </tbody>
        </table>
        <nav aria-label="Page navigation">
            <ul class="pagination" id="pagination-controls">
                <!-- Pagination buttons will be added here by JavaScript -->
            </ul>
        </nav>
    </div>
    
<script>
        document.addEventListener('DOMContentLoaded', () => {
            const rowsPerPage = 10;
            let currentPage = 1;
            let data = [];

            // EDIT HERE ONLY
            //---------------

            const dataUrl = '/french_in_45_days/_includes/data/day_27_data.json';
            // the json data is placed in the _includes/data directory .. you can upload to git-pages separately
            
            const headingText = 'Learn French in 45 days - day 27';

            //---------------

            // Set the heading text
            document.getElementById('page-heading').textContent = headingText;



            // Function to display rows based on current page
            function displayPage(page) {
                const tbody = document.getElementById('table-body');
                tbody.innerHTML = ''; // Clear existing rows

                const start = (page - 1) * rowsPerPage;
                const end = start + rowsPerPage;
                const pageData = data.slice(start, end);

                pageData.forEach(item => {
                    const row = document.createElement('tr');
                    const cellEnglish = document.createElement('td');
                    const cellFrench = document.createElement('td');

                    cellEnglish.textContent = item.english;
                    cellFrench.textContent = item.french;

                    row.appendChild(cellEnglish);
                    row.appendChild(cellFrench);
                    tbody.appendChild(row);
                });

                updatePaginationControls();
            }

            // Function to update pagination controls
            function updatePaginationControls() {
                const paginationControls = document.getElementById('pagination-controls');
                paginationControls.innerHTML = '';

                const totalPages = Math.ceil(data.length / rowsPerPage);

                for (let i = 1; i <= totalPages; i++) {
                    const li = document.createElement('li');
                    li.className = 'page-item';
                    const a = document.createElement('a');
                    a.className = 'page-link';
                    a.href = '#';
                    a.textContent = i;
                    if (i === currentPage) {
                        li.classList.add('active');
                    }
                    a.addEventListener('click', (e) => {
                        e.preventDefault();
                        currentPage = i;
                        displayPage(currentPage);
                    });
                    li.appendChild(a);
                    paginationControls.appendChild(li);
                }
            }

            // Fetch the JSON data and initialize pagination
            fetch(dataUrl) // this is placed in the _includes/data directory .. you can upload to git-pages separately
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(fetchedData => {
                    data = fetchedData;
                    displayPage(currentPage); // Display the first page
                })
                .catch(error => console.error('There was a problem with the fetch operation:', error));
        });
</script>



{% endblock %}



